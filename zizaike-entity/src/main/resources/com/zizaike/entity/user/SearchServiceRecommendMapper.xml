<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zizaike.entity.user.SearchServiceRecommendMapper" >
  <resultMap id="BaseResultMap" type="com.zizaike.entity.user.SearchServiceRecommend" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="service_id" property="serviceId" jdbcType="INTEGER" />
    <result column="service_type" property="serviceType" jdbcType="VARCHAR" />
    <result column="active" property="active" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, service_id, service_type, active, create_at, update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_search_service_recommend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_search_service_recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zizaike.entity.user.SearchServiceRecommend" >
    insert into t_search_service_recommend (id, uid, service_id, 
      service_type, active, create_at, 
      update_at)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, 
      #{serviceType,jdbcType=VARCHAR}, #{active,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zizaike.entity.user.SearchServiceRecommend" >
    insert into t_search_service_recommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="serviceType != null" >
        service_type,
      </if>
      <if test="active != null" >
        active,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceType != null" >
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        #{active,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zizaike.entity.user.SearchServiceRecommend" >
    update t_search_service_recommend
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceType != null" >
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zizaike.entity.user.SearchServiceRecommend" >
    update t_search_service_recommend
    set uid = #{uid,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=INTEGER},
      service_type = #{serviceType,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>